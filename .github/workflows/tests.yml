name: Tests

on:
  push:
  schedule:
    # Run weekly, Friday at 7:15 EST.
    - cron: '15 12 * * 5'
  release:
    types: [published]

jobs:
  build:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install build

      - name: Build
        run: python -m build

      - uses: actions/upload-artifact@v3
        with:
          path: |
            ./dist/*.whl
            ./dist/*.tar.gz

  tests:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install numpy
        pip install 'setuptools' 'wheel' 'numpy>=1.19.0' 'Cython>=0.29.21,<3'  # for classy
        pip install --no-build-isolation classy
        pip install -U .[test]
        make -C pipe_asdf
    - name: Test Python with pytest
      run: |
        # TODO: set up environment in tox
        export NUMBA_THREADING_LAYER=forksafe
        pytest -v
    - name: Test pipe_asdf
      run: |
        ./tests/test_pipe_asdf.sh

  upload:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build, tests]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
